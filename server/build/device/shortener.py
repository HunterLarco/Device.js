""" SYSTEM IMPORTS """
import string


""" MODULE CONSTANTS (do not touch except for SIGN_CHARACTER) """
ALPHABET = string.ascii_uppercase + string.ascii_lowercase + string.digits
ALPHABET_REVERSE = dict((c, i) for (i, c) in enumerate(ALPHABET))
BASE = len(ALPHABET)
SIGN_CHARACTER = '$'


"""
' PURPOSE
'   Given a number, returns a shortened urlsafe
'   string representation
' PARAMETERS
'   <int n>
' RETURNS
'   A string
' NOTES
'   1. The given parameter MUST be a integer
"""
def encode(n):
  if n < 0: return SIGN_CHARACTER + encode(-n)
  characters = []
  while True:
    n, remainder = divmod(n, BASE)
    characters.append(ALPHABET[remainder])
    if n == 0: break
  return ''.join(reversed(characters))


"""
' PURPOSE
'   Given a string generated by 'decode', returns the originally
'   provided integer.
' PARAMETERS
'   <str s>
' RETURNS
'   An integer
"""
def decode(s):
  if s[0] == SIGN_CHARACTER:
    return -decode(s[1:])
  number = 0
  for character in s:
    number = number * BASE + ALPHABET_REVERSE[character]
  return number